plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id "jacoco"
}

java {
    sourceCompatibility = 22
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

group = 'wonderland'

ext.buildNumber = {
    def buildNumber = System.getenv('VERSION')
    if (buildNumber == null || buildNumber.allWhitespace) {
        buildNumber = 'beta'
    }
    return buildNumber
}

project.version = buildNumber()


repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation "org.springframework.cloud:spring-cloud-loadbalancer"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-config"
    implementation "org.springframework.cloud:spring-cloud-starter-consul-discovery"
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.jayway.jsonpath:json-path'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
    implementation 'org.yaml:snakeyaml:2.4'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform {}
}
jacocoTestReport {
    reports {
        xml.required = false
        html.required = true
    }
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}

bootBuildImage {
//	imageName = "bmd007/${project.name}:${project.version}"
    imageName = "bmd007/${project.name}"
    environment = ["BP_JVM_VERSION": "20"]
}
