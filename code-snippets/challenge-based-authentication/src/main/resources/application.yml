server.port: 9522

management:
  server.port: 9523
  health:
    defaults.enabled: true
    diskspace.enabled: false
  endpoints:
    web:
      base-path: /
      exposure.include: "*"
  endpoint:
    prometheus:
      enabled: true
    health:
      enabled: true
      show-details: never
    auditevents.enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
      enable.jvm: true
      enable.jvm.gc.pause: true
      enable.jvm.memory: true
      enable.jvm.threads: true
      enable.process: true
      enable.process.files: true
      enable.http: true
      enable.http.server.requests: true
      enable.logback: true
      enable.system: true
  prometheus:
    metrics:
      export:
        enabled: true

spring:
  application:
    name: challenge-based-authentication
  config:
    import: optional:consul:localhost:8500
  cloud:
    consul:
      discovery:
        prefer-ip-address: true
        health-check-path: /health
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      retries: 3
      acks: all
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest

kafka:
  topic:
    config:
      event: '3:2'
      changelog: '3:2'

---
spring:
  config:
    activate:
      on-profile: local
  kafka:
    streams:
      replication-factor: 1

kafka:
  topic:
    config:
      event: '1:1'
      changelog: '1:1'
      messageEvents: '1:1'

  streams:
    server.config:
      app-ip: localhost
      app-port: ${server.port}
---
spring:
  config:
    activate:
      on-profile: no-consul
  application:
    name: challenge-based-authentication
  kafka:
    streams:
      replication-factor: 1

kafka:
  topic:
    config:
      event: '1:1'
      changelog: '1:1'
      messageEvents: '1:1'


  # This the mapped ip:port for inter instance communication.
  # This value should (will) be injected based on evn variables. Those variables will be defined by orchestration tool environment variables
  streams:
    server.config:
      app-ip: localhost
      app-port: ${server.port}
